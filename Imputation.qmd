---
title: "Run_Analysis"
format: html
---

# Source everything :D
```{r}
source("./src/Source_Everything.R") # Load all functions
source("./LoadSamples.R") # Load samples and relations

# Install_Packages(packages)
```

# Generate the diannReport and diannMatrix for all scenearios
```{r}
Check_SampleName(samplesDF$SampleName)

dir_input <- "./data/input/processed/"
Yeast_Mix_C <- read.csv(paste0(dir_input, "diannMatrix_YEAST.csv" ))



matrices <- list(
  # HY = HY_diannMatrix,
  Yeast = yeast_DiannMatrix #,
  # Human = human_DiannMatrix
)
```

# Data Imputation

## Impute "zero" (0.1) to all missing values ------
```{r}
# Imputed 0.1 to the NA in the diannMatrix
for (name in names(matrices)) {
  result <- mtx <- matrices[[name]] # matrix associate with the name

  result <- ifelse(is.na(mtx), 0.1, mtx)

  # Save the imputation as .CSV
  dir <- paste0("./data/output/matrices/", "basic", "/")
  file <- paste("zero", name, "by_matrix.csv", sep = "_")
  write.csv(result, paste0(dir, file))
  rm(result, mtx, dir, file, name)
}
```


## Mean ------

### by matrix
```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (name in names(matrices)) {
  result <- mtx <- matrices[[name]] # matrix associate with the name

  # Imputation function
  x <- mean(mtx, na.rm = TRUE)
  # Add the imputed values to the right positions
  result <- ifelse(is.na(mtx), x, mtx)

  # Save the imputation as .CSV
  dir <- paste0("./data/output/matrices/", "basic", "/")
  file <- paste("mean", name, "by_matrix.csv", sep = "_")
  write.csv(result, paste0(dir, file))
  rm(result, mtx, dir, file, name, x)
}
```

### by group
 ```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (name in names(matrices)) {
   result <- mtx <- matrices[[name]] # matrix associate with the name

   # Get the conditions to iterate over
   groups <- unique(HY_diannReport$condition) #Todo: a nicer way of doing thix
   for (group in groups) {
     # find which columns match the condition
     cols <- stringr::str_detect(colnames(mtx), group)
     # Imputation function
     x <- mean(mtx[, cols], na.rm = TRUE)
     # Add the imputed values to the right positions
     result[, cols] <- x
   }

   # Save the imputation as .CSV
   dir <- paste0("./data/output/matrices/", "basic", "/")
   file <- paste("mean", name, "by_group.csv", sep = "_")
   write.csv(result, paste0(dir, file))
   rm(result, mtx, dir, file, cols, group, name, groups, x)
}
```

### by column
```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (name in names(matrices)) {
  result <- mtx <- matrices[[name]] # matrix associate with the name

  # Iterate over all the colunms of the "HY" matrix
  for (j in 1:ncol(mtx)) {
    # Check if there is any NA in the column
    if (any(is.na(mtx[, j]))) {
      # Imputation function
      x <- mean(mtx[, j], na.rm = TRUE)
      # Add the imputed values to the right positions
      result[, j] <- ifelse(is.na(mtx[, j]), x, mtx[, j])
    }
  }
  # Save the imputation as .CSV
  dir <- paste0("./data/output/matrices/", "basic", "/")
  file <- paste("mean", name, "by_col.csv", sep = "_")
  write.csv(result, paste0(dir, file))
  rm(result, mtx, dir, file, j, name, x)
}
```

### by row
 ```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (name in names(matrices)) {
   result <- mtx <- matrices[[name]] # matrix associate with the name

   # Iterate over all the rows of the "HY" matrix
   for (i in 1:nrow(mtx)) {
     # Check if there is any NA in the column
     if (any(is.na(mtx[i, ]))) {
       # Imputation function
       x <- mean(mtx[i, ], na.rm = TRUE)
       # Add the imputed values to the right positions
       result[i, ] <- ifelse(is.na(mtx[i, ]), x, mtx[i, ])
     }
   }
   # Save the imputation as .CSV
   dir <- paste0("./data/output/matrices/", "basic", "/")
   file <- paste("mean", name, "by_row.csv", sep = "_")
   write.csv(result, paste0(dir, file))
   rm(result, mtx, dir, file, i, name, x)
}
```

### by Protein whithin a group
 ```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (name in names(matrices)) {
   result <- mtx <- matrices[[name]] # matrix associate with the name

   groups <- unique(HY_diannReport$condition)
   for (group in groups) {
     cols <- stringr::str_detect(colnames(mtx), group)

     for (i in 1:nrow(mtx)) {
       # If all the group is NA, use the row mean
       if (all(is.na(mtx[i, cols]))) {
         # Value to impute
         value <- mean(mtx[i,], na.rm = TRUE)
         result[i, cols] <- ifelse(is.na(mtx[i, cols]), value, mtx[i, cols])
         # If some of the group is NA
       } else if (any(is.na(mtx[i, cols]))) {
         # Imputation function
         x <- mean(mtx[i, cols], na.rm = TRUE)

         result[i, cols] <- ifelse(is.na(mtx[i, cols]), x, mtx[i, cols])
       }
     }
   }
   # Save the imputation as .CSV
   dir <- paste0("./data/output/matrices/", "basic", "/")
   file <- paste("mean", name, "by_protein_in_group.csv", sep = "_")
   write.csv(result, paste0(dir, file))
   rm(result, mtx, dir, file, value, name, x, cols, group, groups, i)
}

```


## MICE - All ------

### by matrix
```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (method in c(
  "pmm",
  # "midastouch",
  "sample",
  "cart",
  "rf",
  "norm" #,
  # "lasso.norm",
  # "lasso.select.norm",
  # "2l.norm",
  # "2l.bin",
  # "2lonly.mean",
  # "2lonly.norm",
  # "2lonly.pmm"
)) {

  for (name in names(matrices)) {
    name <- names(matrices)[1]
    
    result <- mtx <- matrices[[name]] # matrix associate with the name

    set.seed(123)
    # Imputation function
    result <- mice::mice(mtx, method = method, m = 1, maxit = 1) #TODO: Switch both to 5!
    result <- as.matrix(mice::complete(result))

    # Save the imputation as .CSV
    dir <- paste0("./data/output/matrices/", "MICE", "/")
    file <- paste(method, name, "by_matrix.csv", sep = "_")
    write.csv(result, paste0(dir, file))
    rm(result, mtx, dir, file, name)

    break #todo: Remove it, is just for faster testing
  }
}
```

### by group
```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (method in c(
  "pmm",
  # "midastouch",
  "sample",
  "cart",
  "rf",
  "norm" #,
  # "lasso.norm",
  # "lasso.select.norm",
  # "2l.norm",
  # "2l.bin",
  # "2lonly.mean",
  # "2lonly.norm",
  # "2lonly.pmm"
)) {
  for (name in names(matrices)) {
    result <- mtx <- matrices[[name]] # matrix associate with the name

    # Get the conditions to iterate over
    groups <- unique(HY_diannReport$condition) #Todo: a nicer way of doing thix
    for (group in groups) {
      # find which columns match the condition
      cols <- stringr::str_detect(colnames(mtx), group)

      # Imputation function
      set.seed(123)
      x <- mice::mice(mtx[, cols], method = method, m = 1, maxit = 1) #TODO: Switch both to 5!
      x <- as.matrix(mice::complete(x))

      # Add the imputed values to the right positions
      result[, cols] <- x
    }

    # Save the imputation as .CSV
    dir <- paste0("./data/output/matrices/", "MICE", "/")
    file <- paste(method, name, "by_group.csv", sep = "_")
    write.csv(result, paste0(dir, file))
    rm(result, mtx, dir, file, x, cols, groups, group, name)

    break #todo: Remove it, is just for faster testing
  }
}
```






# Compare
```{r}
a <- "./data/output/matrices/MICE/rf_HY_by_matrix"
dfa <- read.csv(a)

b <- "./data/output/matrices/MICE/rf_HY_by_group"
dfb <- read.csv(b)

all.equal(dfa, dfb)

waldo::compare(dfa[1:30, 2], dfb[1:30, 2])
```