---
title: "Run_Analysis"
format: html
---

# Source everything :D
```{r}
source("./src/Source_Everything.R") # Load all functions
source("./LoadSamples.R") # Load samples and relations

# Install_Packages(packages)
```

```{r}
Check_SampleName(samplesDF$SampleName)

HY_diannReport <- Make_DiannReport(samplesDF, organism = "")
yeast_DiannReport <- dplyr::filter(
  HY_diannReport,
  stringr::str_detect(Protein.Names, "YEAST")
)
human_DiannReport <- dplyr::filter(
  HY_diannReport,
  stringr::str_detect(Protein.Names, "HUMAN")
)


#TODO: maybe I should use "Protein.Names" rather than "Genes", but I think since I have alreary filtered it doesn't really matter
HY_diannMatrix <- as.matrix(log2(
  Make_DiannMatrix(HY_diannReport, header = "Genes") + 1
))
yeast_DiannMatrix <- as.matrix(log2(
  Make_DiannMatrix(yeast_DiannReport, header = "Genes") + 1
))
human_DiannMatrix <- as.matrix(log2(
  Make_DiannMatrix(human_DiannReport, header = "Genes") + 1
))

matrices <- list(
  HY = HY_diannMatrix,
  Yeast = yeast_DiannMatrix,
  Human = human_DiannMatrix
)

# result <- diannMatrix
```

# Data Imputation

# Impute "zero" (0.1) to all missing values
```{r}
# Imputed 0.1 to the NA in the diannMatrix
result <- ifelse(is.na(diannMatrix_log), 0.1, diannMatrix_log)

write.csv(result, "./data/output/matrices/imputed_zeros.csv")
rm(result)
```


# Mean
# by column
```{r}
# Iterate over each diannMatrix ("HY", "Y", "H")
for (name in names(matrices)) {
  result <- mtx <- matrices[[name]] # matrix associate with the name ("HY")

  # Iterate over all the colunms of the "HY" matrix
  for (j in 1:ncol(mtx)) {
    # Check if there is any NA in the column
    if (any(is.na(mtx[, j]))) {
      # Imputation function
      x <- mean(mtx[, j], na.rm = TRUE)
      # Add the imputed values to the right positions
      result[, j] <- ifelse(is.na(mtx[, j]), x, mtx[, j])
    }
  }
  # Save the imputation as .CSV
  write.csv(result, paste0("./data/output/matrices/", name ,"_Mean_by_col"))
  rm(result, mtx)
}
```















# Mean by column
```{r}
result <- diannMatrix_log

for (j in 1:ncol(diannMatrix_log)) {
  if (any(is.na(diannMatrix_log[, j]))) {
    x <- mean(diannMatrix_log[, j], na.rm = TRUE)
    result[, j] <- ifelse(is.na(diannMatrix_log[, j]), x, diannMatrix_log[, j])
  }
}

write.csv(result, "./data/output/matrices/imputed_mean_by_column.csv")
rm(result)

```


# Mean by row
 ```{r}
result <- diannMatrix_log

for (i in 1:nrow(diannMatrix_log)) {
  if (any(is.na(diannMatrix_log[i, ]))) {
    x <- mean(diannMatrix_log[i, ], na.rm = TRUE)
    result[i, ] <- ifelse(is.na(diannMatrix_log[i, ]), x, diannMatrix_log[i, ])
  }
}

write.csv(result, "./data/output/matrices/imputed_mean_by_row.csv")
rm(result)

```


# Mean by Protein whithin a group
 ```{r}
result <- diannMatrix_log

groups <- unique(diannReport$condition)
for (group in groups) {
  cols <- stringr::str_detect(colnames(diannMatrix_log), group)

  for (i in 1:nrow(diannMatrix_log)) {
    if (all(is.na(diannMatrix_log[i, cols]))) {
      # If all the group is NA, impute 0.1
      result[i, cols] <- ifelse(
        is.na(diannMatrix_log[i, cols]),
        0.1,
        diannMatrix_log[i, cols]
      )
    } else if (any(is.na(diannMatrix_log[i, cols]))) {
      # If some of the group is NA, impute the mean
      x <- mean(diannMatrix_log[i, cols], na.rm = TRUE)
      result[i, cols] <- ifelse(
        is.na(diannMatrix_log[i, cols]),
        x,
        diannMatrix_log[i, cols]
      )
    }
  }
}

write.csv(result, "./data/output/matrices/imputed_mean_by_group.csv")
rm(result)

```


 # Mice by group
 ```{r}
result <- diannMatrix_log

groups <- unique(diannReport$condition)
for (group in groups) {
  cols <- stringr::str_detect(colnames(diannMatrix), group)

  x <- mice::mice(diannMatrix_log[, cols], method = "mean")
  x <- as.matrix(mice::complete(x))

  result[, cols] <- x
}

write.csv(result, "./data/output/matrices/imputed_by_protein_in_group.csv")
rm(result)

 ```
