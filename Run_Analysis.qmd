---
title: "Run_Analysis"
format: html
---

# Source everything :D
```{r}
# Load all functions
source("./src/Source_Everything.R")
```


# Install Packages
```{r}
# List of needed packages
packages <- c(
  "diann",           # to extract the MaxLFQ matrix from DIANN report
  "arrow",           # to read the report.parquet file
  "here",            # to avoid the need for use the path while loading the data
  "tidyverse",       # to do the data wrangling, plots, etc...
  "janitor",         # to clean the column names
  "ggpointdensity",  # to reconstruct the m/z density map
  "naniar",          # for sparsity analysis
  "factoextra",      # to plot the PCA
  "patchwork",       # to combine plots
  "lsa",             # to calculate the cosine similarity
  "ggvenn",          # to plot the Venn diagram
  "paletteer",       # to use the nice color palette
  "ggtext",          # to provide Markdown and HTML formatting in ggplot2
  "ggrepel",         # to avoid the overlapping of the labels in the plots
  "kableExtra",      # to format the tables
  "limma",           # to calculate the differential abundance
  "DIAgui"           # (no comment provided)
)

Install_Packages(packages)
```


# Load samples names and relations
```{r}

#TODO: the samples and prettyNames could be a dataframe with RUN, SampleName, PrettyName
samples <- c(
  P2_01 =  "NaCl_REP_1",
  P2_02 = "NaCl_REP_2",
  P2_03 =  "NaCl_REP_3",
  
  P2_04 = "Actinonin_15mg_REP_1",
  P2_05 =  "Actinonin_15mg_REP_2",
  P2_06 = "Actinonin_15mg_REP_3",
  P1_04 = "Actinonin_30mg_REP_1",
  P1_05 =  "Actinonin_30mg_REP_2",
  
  P2_11 = "JPM_OEt_50mg_REP_1",
  P2_12 =  "JPM_OEt_50mg_REP_2",
  P1_10 =  "JPM_OEt_100mg_REP_1",
  P1_11 = "JPM_OEt_100mg_REP_2",
  P1_12 =  "JPM_OEt_100mg_REP_3",
  
  P1_02 = "Venom_REP_1",
  P1_03 =  "Venom_REP_2",
  
  P2_07 =  "Ven_e_Actn_15mg_REP_1",
  P2_08 = "Ven_e_Actn_15mg_REP_2",
  P2_09 =  "Ven_e_Actn_15mg_REP_3",
  
  P1_07 = "Ven_e_Actn_30mg_REP_1",
  P1_08 =  "Ven_e_Actn_30mg_REP_2",
  P1_09 = "Ven_e_Actn_30mg_REP_3",
  
  P2_13 = "Ven_e_JPMOEt_50mg_REP_1",
  P2_14 =  "Ven_e_JPMOEt_50mg_REP_2",
  P2_15 = "Ven_e_JPMOEt_50mg_REP_3",
  
  P1_13 = "Ven_e_JPMOEt_100mg_REP_1",
  P1_14 =  "Ven_e_JPMOEt_100mg_REP_2",
  P1_15 = "Ven_e_JPMOEt_100mg_REP_3"
)

prettyNames <- c(
  "NaCl_REP_1" = "NaCl r1",
  "NaCl_REP_2" = "NaCl r2",
  "NaCl_REP_3" = "NaCl r3",
  "NaCl" = "NaCl",
  
  "Actinonin_15mg_REP_1" = "Actinonin 15mg r1",
  "Actinonin_15mg_REP_2" = "Actinonin 15mg r2",
  "Actinonin_15mg_REP_3" = "Actinonin 15mg r3",
  "Actinonin_15mg" = "Actinonin 15mg",
  
  "Actinonin_30mg_REP_1" = "Actinonin 30mg r1",
  "Actinonin_30mg_REP_2" = "Actinonin 30mg r2",
  "Actinonin_30mg" = "Actinonin 30mg",
  
  "JPM_OEt_50mg_REP_1" = "JPMOEt 50mg r1",
  "JPM_OEt_50mg_REP_2" = "JPMOEt 50mg r2",
  "JPM_OEt_50mg" = "JPMOEt 50mg",
  
  "JPM_OEt_100mg_REP_1" = "JPMOEt 100mg r1",
  "JPM_OEt_100mg_REP_2" = "JPMOEt 100mg r2",
  "JPM_OEt_100mg_REP_3" = "JPMOEt 100mg r3",
  "JPM_OEt_100mg" = "JPMOEt 100mg",
  
  "Venom_REP_1" = "Venom r1",
  "Venom_REP_2" = "Venom r2",
  "Venom" = "Venom",
  
  "Ven_e_Actn_15mg_REP_1" = "Venom + Actinonin 15mg r1",
  "Ven_e_Actn_15mg_REP_2" = "Venom + Actinonin 15mg r2",
  "Ven_e_Actn_15mg_REP_3" = "Venom + Actinonin 15mg r3",
  "Ven_e_Actn_15mg" = "Venom + Actinonin 15mg",
  
  "Ven_e_Actn_30mg_REP_1" = "Venom + Actinonin 30mg r1",
  "Ven_e_Actn_30mg_REP_2" = "Venom + Actinonin 30mg r2",
  "Ven_e_Actn_30mg_REP_3" = "Venom + Actinonin 30mg r3",
  "Ven_e_Actn_30mg" = "Venom + Actinonin 30mg",
  
  "Ven_e_JPMOEt_50mg_REP_1" = "Venom + JPMOEt 50mg r1",
  "Ven_e_JPMOEt_50mg_REP_2" = "Venom + JPMOEt 50mg r2",
  "Ven_e_JPMOEt_50mg_REP_3" = "Venom + JPMOEt 50mg r3",
  "Ven_e_JPMOEt_50mg" = "Venom + JPMOEt 50mg",
  
  "Ven_e_JPMOEt_100mg_REP_1" = "Venom + JPMOEt 100mg r1",
  "Ven_e_JPMOEt_100mg_REP_2" = "Venom + JPMOEt 100mg r2",
  "Ven_e_JPMOEt_100mg_REP_3" = "Venom + JPMOEt 100mg r3",
  "Ven_e_JPMOEt_100mg" = "Venom + JPMOEt 100mg"
)


samplesToCompare = list(
  Actinonin_15mg_vs_NaCl = "Actinonin_15mg - NaCl",
  Actinonin_30mg_vs_NaCl = "Actinonin_30mg - NaCl",
  
  JPMOEt_50mg_vs_NaCl = "JPM_OEt_50mg - NaCl",
  JPMOEt_100mg_vs_NaCl = "JPM_OEt_100mg - NaCl",
  
  Venom_vs_NaCl = "Venom - NaCl",
  
  Ven_e_Actn_15mg_vs_NaCl = "Ven_e_Actn_15mg - NaCl",
  Ven_e_Actn_30mg_vs_NaCl = "Ven_e_Actn_30mg - NaCl",
  
  Ven_e_jPMOEt_50mg_vs_NaCl = "Ven_e_JPMOEt_50mg - NaCl",
  Ven_e_jPMOEt_100mg_vs_NaCl = "Ven_e_JPMOEt_100mg - NaCl",
  
  Actinonin_15mg_vs_Actinonin_30mg = "Actinonin_15mg - Actinonin_30mg",
  JPMOEt_50mg_vs_JPMOEt_100mg = "JPM_OEt_50mg - JPM_OEt_100mg",
  
  Ven_e_Actn_15mg_vs_Venom = "Ven_e_Actn_15mg - Venom",
  Ven_e_Actn_30mg_vs_Venom = "Ven_e_Actn_30mg - Venom",
  
  Ven_e_jPMOEt_50mg_vs_Venom = "Ven_e_JPMOEt_50mg - Venom",
  Ven_e_jPMOEt_100mg_vs_Venom = "Ven_e_JPMOEt_100mg - Venom"
)


colors <- c(
  "#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99",
  "#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a")

clusterColor <- c(
  "#1f78b4","#33a02c","#e31a1c","#ff7f00","#6a3d9a")


genesToHighLight_BlandAltman <- c(
  "Il1rap", "Lcn2", "Slc47a1", "Chia", "Mup17", "Mup3","Umod", "Mup20",
  "Xpnpep2",  "Nectin4", "Esam", "Alb","Asah1", "Smpd1", "Smpdl3a", "Apoe",
  "Apoa1", "Apoa2","B2m", "Vcam1", "Blvrb", "Orm2", "Orm1", "Mup4", "Obp1a",
  "Serpina6", "C8g", "Ngp", "Cd36", "Hba", "Hbb-b1","Hbb-b2","Chil3", "Apcs",
  "Hp", "Mug1", "Serpina1b","Serpina3k", "Bcam", "Cdh1", "Cdh11", "Ceacam1",
  "Cd248","Cfi", "Fgg", "Fga", "Fgb", "Kng1", "Lum", "Retnla","Cd200",
  "Cd44","Cd48", "Cd36", "Cltrn", "Cp", "Cspg4","Cst3", "Ctsd", "Ctse",
  "Ctso","Dag1", "Dsc1")


genesToCompare <- c("Il1rap", "Lcn2", "Mup17", "Mup3","Umod", "Mup20")

```


```{r}
Check_SampleName(samples)

diannReport <- Generate_DiannReport(samples, organism = "MOUSE")
diannMatrix <- Generate_DiannMatrix(diannReport, header = "Genes")

```


# Precursor x RT
```{r}
precursorRT <- Generate_Graph_PrecursorRT(diannReport, prettyNames, colors)

ggplot2::ggsave(
  filename = paste0("Precursor_x_RT", ".png"),
  path = "./data/output/",
  plot = precursorRT,
  width = 12, height = 10,
  units = "in", dpi = 300
)

rm(precursorRT)
```


# Ion Cloud
```{r}
ionCloud <- Generate_IonCloud(diannReport, prettyNames)

ggplot2::ggsave(
  filename = paste0("ionCloud", ".png"),
  path = "./data/output/",
  plot = ionCloud,
  width = 24, height = 10,
  units = "in", dpi = 300
)

rm(ionCloud)
```


# Number of Peptides
```{r}
nPeptides <- Generate_Graph_NumberOfPeptides(diannReport, prettyNames, colors)

ggplot2::ggsave(
  filename = paste0("number_peptides", ".png"),
  path = "./data/output/",
  plot = nPeptides,
  width = 8, height = 10,
  units = "in", dpi = 300
)

rm(nPeptides)
```


# Number of Proteins
```{r}
nProteins <- Generate_Graph_NumberOfProteins(diannReport, prettyNames, colors)

ggplot2::ggsave(
  filename = paste0("number_proteins", ".png"),
  path = "./data/output/",
  plot = nProteins,
  width = 8, height = 10,
  units = "in", dpi = 300
)

rm(nProteins)
```


# Sparsity Matrix
```{r}
sparsityMatrix <- Generate_SparsityMatrix(diannMatrix, prettyNames)

ggplot2::ggsave(
  filename = paste0("sparsityMatrix", ".png"),
  path = "./data/output/",
  plot = sparsityMatrix,
  width = 12, height = 10,
  units = "in", dpi = 300
)

rm(sparsityMatrix)
```


# Data Imputation
```{r}

filteredMatrix <- 


imputedMatrix_StepWise <- Create_ImputationMatrix_StepWise(diannMatrix,
                                                           override = FALSE)

imputedMatrix_MICE_RF <- Create_ImputarionMatrix_MICE(diannMatrix,
                                                      methodValue = "rf",
                                                      override = FALSE)

imputedMatrix_MICE_PMM <- Create_ImputarionMatrix_MICE(diannMatrix,
                                                      methodValue = "pmm",
                                                      override = FALSE)
```


# Cosine Similarity
```{r}
cosineSimilarity_StepWise <- Generate_Graph_CosineSimilarity(
  imputedMatrix_StepWise,
  samples,
  prettyNames
)

cosineSimilarity_MICE_RF <- Generate_Graph_CosineSimilarity(
  imputedMatrix_MICE_RF,
  samples,
  prettyNames
)

cosineSimilarity_MICE_PMM <- Generate_Graph_CosineSimilarity(
  imputedMatrix_MICE_PMM,
  samples,
  prettyNames
)

combinePlots <- patchwork::wrap_plots(cosineSimilarity_StepWise, cosineSimilarity_MICE_RF,cosineSimilarity_MICE_PMM,  ncol = 3) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(plot.tag = ggplot2::element_text(size = 30, face = "bold"))



ggplot2::ggsave(
  filename = paste0("combinePlots", ".png"),
  path = "./data/output/",
  plot = combinePlots,
  width = 40, height = 12,
  units = "in", dpi = 300
)

rm(cosineSimilarity_StepWise, cosineSimilarity_MICE_RF, cosineSimilarity_MICE_PMM)
```


# PCA and K-Means
```{r}
kMeansPCA <- Generate_Graph_PCA_and_Kmeans(
  imputedMatrix,
  numberOfClusters = 5,
  clusterColors = clusterColor,
  labels = prettyNames
)

ggplot2::ggsave(
  filename = paste0("kMeans_PCA", ".png"),
  path = "./data/output/",
  plot = kMeansPCA,
  width = 24, height = 10,
  units = "in", dpi = 300
)

rm(kMeansPCA)
```


# Coefficient of Variation
```{r}
CVs <- Generate_Graph_Coef_Variation(
  imputedMatrix,
  conditions = unique(diannReport$condition),
  labelsName = prettyNames,
  colorList = colors
)


ggplot2::ggsave(
  filename = paste0("Coef_Variation", ".png"),
  path = "./data/output/",
  plot = CVs,
  width = 10, height = 10,
  units = "in", dpi = 300
)

rm(CVs)
```


# Limma
```{r}
limmaContrasts <- Create_ContrastFitQuantUMS(imputedMatrix, samplesToCompare)

limmaResult <- CompareLimmaResults(limmaContrasts, samplesToCompare)

# #Save limma result in a .tsv file
write.table(
  limmaResult,
  file = "./data/output/allLimmaResultsCombined.tsv",
  quote = FALSE,
  sep = '\t',
  col.names = NA
)


number_significantProteins <- Count_SignificantProteins(limmaResult)

#Save limma result in a .tsv file
write.table(
  number_significantProteins,
  file = "./data/output/number_significantProteins.tsv",
  quote = FALSE,
  sep = '\t',
  col.names = NA
)

rm(limmaContrasts, number_significantProteins)
```


# Bland-Altman
```{r}
blandAltmanPlot <- Generate_Graph_BlandAltman(
  limmaResult, 
  genesToHighLight_BlandAltman
)

ggplot2::ggsave(
  paste0("Bland_Altman", ".png"),
  path = "./data/output/",
  plot = blandAltmanPlot,
  width = 25, height = 12,
  units = "in", dpi = 300,
  bg = "white"
)


rm(blandAltmanPlot)
```


# Compare Proteins Abundance
```{r}
proteinComparisonPlot <- Compare_ProteinsAbundance(
  imputedMatrix,
  genes = genesToCompare,
  colorList = colors,
  labels = prettyNames,
  n_columns = 10)


ggplot2::ggsave(
  paste0("Proteins_Comparison", ".png"),
  path = "./data/output/",
  plot = proteinComparisonPlot,
  width = 25, height = 8,
  units = "in", dpi = 300,
  bg = "white"
)

rm(proteinComparisonPlot)
```

