---
title: "Run_Analysis"
format: html
---

# Source everything :D

```{r}
source("./src/Source_Everything.R") # Load all functions
source("./LoadSamples.R") # Load samples and relations

# Install_Packages(packages) 
```


```{r}
Check_SampleName(samplesDF$SampleName)


diannReport <- Make_DiannReport(samplesDF, organism = "")
yeast_DiannReport <- dplyr::filter(diannReport, stringr::str_detect(Protein.Names, "YEAST"))
human_DiannReport <- dplyr::filter(diannReport, stringr::str_detect(Protein.Names, "HUMAN"))



diannMatrix <- Make_DiannMatrix(diannReport, header = "Protein.Names")



```

# Precursor x RT
```{r}
chromatogram <- Plot_Chromatogram(diannReport, fancyLabels, colors, cols = 5) +
  ggplot2::labs(title = "HeLa + Yeast") +
  ggplot2::theme(plot.title = ggplot2::element_text(size = 12, face = "bold", vjust = 0.5, hjust = 0.5))


ggplot2::ggsave(
  filename = paste0("Chromatogram", ".png"),
  path = "./data/output/basic/",
  plot = chromatogram,
  width = 20, height = 10,
  units = "cm", dpi = 300
)

rm(chromatogram)
```

# Ion Cloud

```{r}
ionCloud <- Plot_IonCloud(diannReport, fancyLabels, cols = 5) +
  ggplot2::labs(title = "HeLa + Yeast") +
  ggplot2::theme(plot.title = ggplot2::element_text(size = 12, face = "bold", vjust = 0.5, hjust = 0.5))

ggplot2::ggsave(
  filename = paste0("ionCloud", ".png"),
  path = "./data/output/basic/",
  plot = ionCloud,
  width = 20, height = 10,
  units = "cm", dpi = 300
)

rm(ionCloud)
```


# Number of Peptides
```{r}
theme <- ggplot2::theme(
      plot.title = ggplot2::element_text(size = 12, face = "bold", vjust = 0.5),
      plot.subtitle = ggplot2::element_text(size = 8)
      )

# Count the peptides for:  Yeast and Human combined, Yeast only, and Human only
HL_nPeptides <- Plot_nPeptides(diannReport, fancyLabels, colors) +
    ggplot2::labs(title = "(A) HeLa + Yeast") + theme

Y_nPeptides <- Plot_nPeptides(yeast_DiannReport, fancyLabels, colors) +
    ggplot2::labs(title = "(B) Yeast") + theme

H_nPeptides <- Plot_nPeptides(human_DiannReport, fancyLabels, colors) +
    ggplot2::labs(title = "(C) HeLa") + theme

combine_Pept <- patchwork::wrap_plots(HL_nPeptides, Y_nPeptides, H_nPeptides, nrow = 1)

ggplot2::ggsave(
  filename = paste0("nPeptides", ".png"),
  path = "./data/output/basic/",
  plot = combine_Pept,
  width = 30, height = 12,
  units = "cm", dpi = 300)

rm(theme, HL_nPeptides, Y_nPeptides, H_nPeptides, combine_Pept)
```

# Number of Proteins
```{r}
theme <- ggplot2::theme(
      plot.title = ggplot2::element_text(size = 12, face = "bold", vjust = 0.5),
      plot.subtitle = ggplot2::element_text(size = 8)
      )

HL_nProteins <- Plot_nProteins(diannReport, labels = fancyLabels, colors) +
    ggplot2::labs(title = "(A) HeLa + Yeast") + theme

Y_nProteins <- Plot_nProteins(yeast_DiannReport, labels = fancyLabels, colors) +
    ggplot2::labs(title = "(B) Yeast") + theme

H_nProteins <- Plot_nProteins(human_DiannReport, labels = fancyLabels, colors) +
    ggplot2::labs(title = "(C) HeLa") + theme

combine_Prot <- patchwork::wrap_plots(HL_nProteins, Y_nProteins, H_nProteins)

ggplot2::ggsave(
  filename = paste0("nProteins", ".png"),
  path = "./data/output/basic/",
  plot = combine_Prot,
  width = 30, height = 12,
  units = "cm", dpi = 300)

rm(HL_nProteins, Y_nProteins, H_nProteins, combine_Prot)
```

# Sparsity Matrix

```{r}
  sparsity <- Plot_Sparsity(diannMatrix, fancyLabels)

ggplot2::ggsave(
  filename = paste0("sparsity", ".png"),
  path = "./data/output/basic/",
  plot = sparsity,
  width = 12, height = 20,
  units = "cm", dpi = 300
)

rm(sparsity)
```