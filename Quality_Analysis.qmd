---
title: "Run_Analysis"
format: html
---

# Source everything :D
```{r}
source("./src/Source_Everything.R") # Load all functions
source("./LoadSamples.R") # Load samples and relations

diannReport <- Generate_DiannReport(samplesDF, organism = "")

# Install_Packages(packages) 
```

# Read data from .csv
```{r}
zeros <- as.matrix(tibble::column_to_rownames(
  read.csv("./data/output/matrices/imputed_zeros.csv"),
   "X"
   ))

# To avoid having to switch everywhere
imputed <- zeros
fileName <- "Zeros_HeLa_+_Yeast"
```

# Quality Analysis
```{r}
# Cosine Similarity
cosineSimilarity <- Generate_Graph_CosineSimilarity(imputed, fancyLabels)

# k-Means
kmeans <- Generate_Graph_kmeans(imputed, numberOfClusters = 2)

# PCA
pca <- Generate_Graph_PCA(
  imputed,
  numberOfClusters = 2,
  clusterColors = clusterColor,
  labels = fancyLabels
)

# Coefficient of Variation
CVs <- Generate_Graph_Coef_Variation(
  imputed,
  unique(diannReport$condition),
  fancyLabels,
  colors
)


# TODO: Add a title at the combined plot with the Gene filter (HUMAN or Yeast) and the type of imputation used

title <- stringr::str_replace_all(fileName, "_", " ")

combine <- patchwork::wrap_plots(
  list(cosineSimilarity, kmeans, pca, CVs),
  cols = 4,
  nrow = 1
) +
  patchwork::plot_annotation(
    title = paste0(title),
    tag_levels = "A",
    theme = ggplot2::theme(
      plot.title = ggplot2::element_text(face = "bold", size = "35", hjust = 0.5),
    )
  )


ggplot2::ggsave(
  filename = paste0("quality_", fileName, ".png"),
  path = "./data/output/quality/",
  plot = combine,
  width = 80,
  height = 30,
  units = "cm",
  dpi = 300
)

# rm(cosineSimilarity, kmeans, pca, CVs, combine)
```






# Limma
```{r}
limmaContrasts <- Create_ContrastFitQuantUMS(imputedMatrix, samplesToCompare, method = "robust")

limmaResult <- CompareLimmaResults(limmaContrasts, samplesToCompare)

# #Save limma result in a .tsv file
write.table(
  limmaResult,
  file = "./data/output/allLimmaResultsCombined.tsv",
  quote = FALSE,
  sep = '\t',
  col.names = NA
)


number_significantProteins <- Count_SignificantProteins(limmaResult)
#Save limma result in a .tsv file
write.table(
  number_significantProteins,
  file = "./data/output/number_significantProteins.tsv",
  quote = FALSE,
  sep = '\t',
  col.names = NA
)

rm(limmaContrasts, number_significantProteins)
```


# Bland-Altman
```{r}
blandAltmanPlot <- Generate_Graph_BlandAltman(
  limmaResult, 
  genesToHighLight_BlandAltman,
  labels = fancyLabels
)

ggplot2::ggsave(
  paste0("Bland_Altman", ".png"),
  path = "./data/output/",
  plot = blandAltmanPlot,
  width = 25, height = 12,
  units = "in", dpi = 300,
  bg = "white"
)


rm(blandAltmanPlot)
```


# Compare Proteins Abundance
```{r}
proteinComparisonPlot <- Compare_ProteinsAbundance(
  imputedMatrix,
  genes = genesToCompare,
  colorList = colors,
  labels = fancyLabels,
  n_columns = 5)


ggplot2::ggsave(
  paste0("Proteins_Comparison", ".png"),
  path = "./data/output/",
  plot = proteinComparisonPlot,
  width = 25, height = 8,
  units = "in", dpi = 300,
  bg = "white"
)

rm(proteinComparisonPlot)
```

